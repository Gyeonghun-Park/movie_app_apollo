{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["Container","styled","div","Poster","props","bg","id","to","GET_MOVIES","gql","Header","header","Title","h1","Subtitle","h3","Loading","Movies","useQuery","loading","data","movies","map","m","Movie","key","medium_cover_image","GET_MOVIE","Column","Suggestions","h4","Description","p","Suggestion","Test","useParams","variables","parseInt","movie","title","language","rating","description_intro","suggestions","s","App","exact","path","Home","Detail","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f922435.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 380px;\n  width: 100%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  overflow: hidden;\n  border-radius: 7px;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nexport default ({ id, bg }) => (\n  <Container>\n    <Link to={`/${id}`}>\n      <Poster bg={bg} />\n    </Link>\n  </Container>\n);\n","import React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport Movie from \"../components/Movie\";\n\nconst GET_MOVIES = gql`\n  {\n    movies {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  height: 45vh;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 35px;\n`;\n\nconst Loading = styled.div`\n  font-size: 18px;\n  opacity: 0.5;\n  font-weight: 500;\n  margin-top: 10px;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\nexport default () => {\n  const { loading, data } = useQuery(GET_MOVIES);\n  return (\n    <Container>\n      <Header>\n        <Title>Apollo 2020</Title>\n        <Subtitle>I love GraphQL</Subtitle>\n      </Header>\n      {loading && <Loading>Loading...</Loading>}\n      <Movies>\n        {data?.movies?.map((m) => (\n          <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />\n        ))}\n      </Movies>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport Movie from \"../components/Movie\";\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  height: 90vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n  margin-bottom: -50px;\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 50%;\n  height: 70%;\n  display: flex;\n`;\n\nconst Suggestions = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\n\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nconst Poster = styled.div`\n  width: 20%;\n  height: 60%;\n  background-color: transparent;\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Suggestion = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\nconst Test = styled.div`\n  position: relative;\n  top: -80px;\n  text-align: center;\n  font-size: 35px;\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport default () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id: parseInt(id) },\n  });\n  return (\n    <>\n      <Container>\n        <Column>\n          <Title>{loading ? \"Loading...\" : data?.movie?.title}</Title>\n          <Subtitle>\n            {data?.movie?.language} Â· {data?.movie?.rating}\n          </Subtitle>\n          <Description>{data?.movie?.description_intro}</Description>\n        </Column>\n        <Poster bg={data?.movie?.medium_cover_image}></Poster>\n      </Container>\n      <Test>Suggestions relating to {data?.movie?.title}</Test>\n\n      <Suggestions>\n        <Suggestion>\n          {data?.suggestions?.map((s) => (\n            <Movie key={s.id} id={s.id} bg={s.medium_cover_image} />\n          ))}\n        </Suggestion>\n      </Suggestions>\n    </>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Detail from \"../routes/Detail\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/:id\">\n        <Detail />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://o0tev.sse.codesandbox.io/\",\n  cache: new InMemoryCache(),\n});\n\nexport default client;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport App from \"./components/App\";\nimport client from \"./apollo\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}